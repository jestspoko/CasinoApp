{"ast":null,"code":"var _jsxFileName = \"/Users/lukaszczechowicz/Downloads/comeon-assignment-mobileapps-main/website/src/GameCell.tsx\";\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport './Game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction GameCell(props) {\n  const {\n    game\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Game\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: game.icon,\n      alt: \"game-thumbnail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: game.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), game.short_desc]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      \"aria-label\": \"play\",\n      onClick: () => {\n        const assertedWindow = window; // Trigger bridge message for IOS (What will be the equivalent for Android?)\n\n        if (assertedWindow.webkit && assertedWindow.webkit.messageHandlers && assertedWindow.webkit.messageHandlers.toggleMessageHandler) {\n          assertedWindow.webkit.messageHandlers.toggleMessageHandler.postMessage({\n            toggleMessageHandler: {\n              id: game.id,\n              name: game.name,\n              icon: game.icon,\n              description: game.description\n            }\n          });\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(RightIcon, {\n        fontSize: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_c = GameCell;\nexport default GameCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameCell\");","map":{"version":3,"sources":["/Users/lukaszczechowicz/Downloads/comeon-assignment-mobileapps-main/website/src/GameCell.tsx"],"names":["React","IconButton","RightIcon","GameCell","props","game","icon","name","short_desc","assertedWindow","window","webkit","messageHandlers","toggleMessageHandler","postMessage","id","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,SAAP,MAAsB,uCAAtB;AACA,OAAO,YAAP;;;AAYA,SAASC,QAAT,CAAkBC,KAAlB,EAA8B;AAC5B,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEC,IAAI,CAACC,IAAf;AAAqB,MAAA,GAAG,EAAC;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA,kBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,cADF,EAEGF,IAAI,CAACG,UAFR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,UAAD;AACE,oBAAW,MADb;AAEE,MAAA,OAAO,EAAE,MAAM;AACb,cAAMC,cAAc,GAAGC,MAAvB,CADa,CAEb;;AACA,YAAID,cAAc,CAACE,MAAf,IACGF,cAAc,CAACE,MAAf,CAAsBC,eADzB,IAEGH,cAAc,CAACE,MAAf,CAAsBC,eAAtB,CAAsCC,oBAF7C,EAGE;AACAJ,UAAAA,cAAc,CAACE,MAAf,CAAsBC,eAAtB,CAAsCC,oBAAtC,CAA2DC,WAA3D,CAAuE;AACrED,YAAAA,oBAAoB,EAAE;AACpBE,cAAAA,EAAE,EAAEV,IAAI,CAACU,EADW;AAEpBR,cAAAA,IAAI,EAAEF,IAAI,CAACE,IAFS;AAGpBD,cAAAA,IAAI,EAAED,IAAI,CAACC,IAHS;AAIpBU,cAAAA,WAAW,EAAEX,IAAI,CAACW;AAJE;AAD+C,WAAvE;AAQD;AACF,OAlBH;AAAA,6BAoBE,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAC;AAApB;AAAA;AAAA;AAAA;AAAA;AApBF;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;KAjCQb,Q;AAkCT,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport './Game.css';\n\nexport interface Game {\n  id: string;\n  name: string;\n  icon: string;\n  description: string;\n  short_desc: string;\n  code: string;\n  theme: string;\n}\n\nfunction GameCell(props: any) {\n  const { game } = props;\n  return (\n    <div className=\"Game\">\n      <img src={game.icon} alt=\"game-thumbnail\" />\n      <p>\n        <b>{game.name}</b>\n        {game.short_desc}\n      </p>\n      <IconButton\n        aria-label=\"play\"\n        onClick={() => {\n          const assertedWindow = window as any;\n          // Trigger bridge message for IOS (What will be the equivalent for Android?)\n          if (assertedWindow.webkit\n              && assertedWindow.webkit.messageHandlers\n              && assertedWindow.webkit.messageHandlers.toggleMessageHandler\n          ) {\n            assertedWindow.webkit.messageHandlers.toggleMessageHandler.postMessage({\n              toggleMessageHandler: {\n                id: game.id,\n                name: game.name,\n                icon: game.icon,\n                description: game.description,\n              },\n            });\n          }\n        }}\n      >\n        <RightIcon fontSize=\"large\" />\n      </IconButton>\n    </div>\n  );\n}\nexport default GameCell;\n"]},"metadata":{},"sourceType":"module"}